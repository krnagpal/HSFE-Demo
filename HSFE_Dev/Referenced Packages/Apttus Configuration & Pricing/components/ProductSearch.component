<!-- 
    Apttus Config & Pricing
    ProductSearch
     
    @2010-2011 Apttus Inc. All rights reserved.

 -->
<apex:component controller="Apttus_Config2.ProductSearchController" allowDML="true" >	
    
    <!--  page controller - specify page controller associated with the component. The page controller is
	used to locate the select controller to delegate the select and cancel actions to. 
	-->	
	<apex:attribute name="pageController" 
					description="Page Controller" 
					type="Apttus_Config2.PageControllerBase" 
					required="true" 
					assignTo="{!pageControllerProp}" />
	
	<!--  selectButtonLabel - specify a label to override the select button label. -->
	<apex:attribute name="selectButtonLabel" 
					description="Label for the select button" 
					type="String" 
					required="false" 
					assignTo="{!selectButtonLabelProp}" />
									
	<!--  autoSearch - specify here or provide as a parameter to the component. -->
	<apex:attribute name="autoSearch" 
					description="Auto Search Indicator" 
					type="Boolean" 
					required="false" 
					default="true" 
					assignTo="{!autoSearchProp}" />
									
    <!--  preFilterXml - specify here or provide as a parameter to the component. -->
	<apex:attribute name="preFilterXml" 
					description="Pre-filter for auto search" 
					type="String" 
					required="false" 
					assignTo="{!preFilterXmlProp}" />
	
	<!--  result fieldset name - the name of the fieldset that holds result fields -->
    <apex:attribute name="resultFieldSetName" 
    				description="Result Fieldset Name" 
    				type="String" 
    				required="false" 
    				assignTo="{!ResultFieldSetNameProp}" />
    
    <!--  price list id - the id of the price list  -->
    <apex:attribute name="priceListId" 
    				description="Price List Id" 
    				type="ID" 
    				required="false" 
    				assignTo="{!PriceListIdProp}" />
    				
	<!--  customFieldNamesCsv - specify here or provide as a parameter to the component. -->
	<apex:attribute name="customFieldNamesCsv" 
					description="Comma separated list of custom field names" 
					type="String" 
					required="false" 
					assignTo="{!customFieldNamesCsvProp}" />
	
	<apex:stylesheet value="{!$Resource.Apttus_Config2__ConfigStyles}" />
																		
	<apex:pageBlock id="idSearchResultBlock" mode="detail" rendered="{!isEnabled}" >
		<script>
		 	//cannot define var in js for IE8
		 	var aptSearchedCheckboxes = [];
		</script>	
		<apex:pageBlockButtons location="both">
	        <apex:commandButton value="{!selectButtonLabel}" action="{!doOk}" />
	    </apex:pageBlockButtons>
	    
	    <apex:outputPanel id="idResultSetPanel">
		    <apex:outputPanel id="idResultStatsPanel" styleClass="bNext" layout="block" style="text-align: right;" rendered="{!hasProducts}">
				<font size="1px">{!$Label.PageNbr}:&nbsp;<apex:outputLabel value="{!currentPageNumber}"/>&nbsp;{!$Label.OutOf}&nbsp;<apex:outputLabel value="{!totalPages}"/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</font>
				<apex:outputPanel id="idNavigationPanel" styleClass="next" layout="block" rendered="{!OR(hasNextPage,hasPreviousPage)}">
					<apex:outputPanel rendered="{!NOT(hasPreviousPage)}" styleClass="greyedLink">&lt;{!$Label.PreviousPage}</apex:outputPanel>
					<apex:commandLink rendered="{!hasPreviousPage}" action="{!previousPage}" reRender="idSearchResultBlock">&lt;{!$Label.PreviousPage}</apex:commandLink>
					<span> | </span>
					<apex:outputPanel rendered="{!NOT(hasNextPage)}" styleClass="greyedLink">{!$Label.NextPage}&gt;</apex:outputPanel>
					<apex:commandLink rendered="{!hasNextPage}" action="{!nextPage}" reRender="idSearchResultBlock">{!$Label.NextPage}&gt;</apex:commandLink>
				</apex:outputPanel>
			</apex:outputPanel>
			&nbsp;
			<apex:outputPanel id="idRecordSetPanel" >
				<apex:pageBlockSection title="{!$Label.apttus_config2__Products}" columns="1" collapsible="true">
			        <apex:pageBlockTable value="{!products}" 
			        					 var="productInfo" 
			        					 rowClasses="oddRow,evenRow" 
			        					 width="100%" 
			        					 rendered="{!hasProducts}">
			        	<apex:column >
							<apex:facet name="header" >
								<apex:inputCheckbox id="idSelectAllSearched"
								onclick="aptToggleSelectAll(this, 'searched')" 
								onchange="aptToggleSelectAll(this, 'searched')"/>
							</apex:facet>
							<apex:inputCheckbox value="{!productInfo.selected}" id="idSelectSearched" 
							onchange="aptUncheckSelectAll('searched');"/>
			        		<script>aptSearchedCheckboxes.push("{!$Component.idSelectSearched}");</script>
						</apex:column>
			        	
			        	<!--  Quick Search Result Field Set  -->
						<apex:repeat value="{!ResultFields}" 
									 var="fd">
							<apex:column value="{!productInfo.productSO[fd.fieldName]}" >
								<apex:facet name="header">
									<apex:outputPanel > 
						        		<apex:commandLink value="{!fd.fieldLabel}" 
						        						  action="{!doSort}" 
						        						  rendered="{!fd.isSortable}"
						        						  reRender="idSearchResultBlock">        
		                        			<apex:param name="sortFieldName" value="{!fd.fieldName}" />	
		                        			<apex:image url="{!$Resource.Apttus_Config2__Image_SortAsc}" 
		                        						title="{!$Label.apttus_config2__SortedAscending}" 
		                        						alt="{!$Label.apttus_config2__SortedAscending}" 
		                        						rendered="{!sortFieldName == fd.fieldName && sortOrder != 'DESC'}" />
		                        			<apex:image url="{!$Resource.Apttus_Config2__Image_SortDesc}" 
		                        						title="{!$Label.apttus_config2__SortedDescending}" 
		                        						alt="{!$Label.apttus_config2__SortedDescending}" 
		                        						rendered="{!sortFieldName == fd.fieldName && sortOrder == 'DESC'}" />
		                        		</apex:commandLink>
		                        		<apex:outputText value="{!fd.fieldLabel}" 
		                        						 rendered="{!NOT(fd.isSortable)}" />			 
	                        		</apex:outputPanel>
		        				</apex:facet>
		        		
							</apex:column>
						</apex:repeat>	   
			          	
			        </apex:pageBlockTable>
			        <apex:outputText value="{!$Label.apttus_config2__NoRecordsToDisplay}" rendered="{!NOT(hasProducts)}" />
			    </apex:pageBlockSection>
			</apex:outputPanel>
		
		</apex:outputPanel>
	</apex:pageBlock>

</apex:component>