<!-- 
    Apttus Approvals Management
    SObjectApprovals2Submit
     
    @2010-2014 Apttus Inc. All rights reserved.

 -->
<apex:page standardController="Apttus_Approval__Approval_Request__c"
           extensions="Apttus_Approval.SObjectApprovals2SubmitController" 
           recordSetVar="ApprovalReqList"
           action="{!doCheckAndSubmit}">
    
	<!-- include CSS resources first -->
	<apex:stylesheet value="{!URLFOR($Resource.Apttus_Approval__JQueryUILibrary, 'css/ui-lightness/jquery-ui-1.8.16.custom.css')}" />
	<apex:stylesheet value="{!$Resource.Apttus_Approval__ApprovalsGlobalCSS}" />
    <apex:stylesheet value="{!URLFOR($Resource.Apttus_Approval__YUILibrary, '/yui/build/assets/skins/sam/skin.css')}" />

	<!-- include JS resources last -->
	<apex:includeScript value="{!URLFOR($Resource.Apttus_Approval__JQueryUILibrary, 'js/jquery-1.6.2.min.js')}" />
	<apex:includeScript value="{!URLFOR($Resource.Apttus_Approval__JQueryUILibrary, 'js/jquery-ui-1.8.16.custom.min.js')}" />
    <apex:includescript value="{!URLFOR($Resource.Apttus_Approval__YUILibrary, '/yui/build/yahoo-dom-event/yahoo-dom-event.js')}" />
    <apex:includescript value="{!URLFOR($Resource.Apttus_Approval__YUILibrary, '/yui/build/dragdrop/dragdrop-min.js')}" />
    <apex:includescript value="{!URLFOR($Resource.Apttus_Approval__YUILibrary, '/yui/build/container/container-min.js')}" />
    <apex:includescript value="{!URLFOR($Resource.Apttus_Approval__YUILibrary, '/yui/build/animation/animation-min.js')}" />

	<!-- include JS resources for preview, submit, and cancel -->
    <apex:include pageName="Apttus_Approval__ApprovalsJSLibInclude" />
    <script type="text/javascript" src="/soap/ajax/30.0/connection.js"></script>
    <script type="text/javascript" src="/soap/ajax/30.0/apex.js"></script>

    <style>
        .waitDialog .ui-dialog-titlebar {
            color: black;
        }
        
        /* hide the close x on the loading screen */
        .waitDialog .ui-dialog-titlebar-close {
            display: none;
        }
        
        .aptMainBlockHeader {
            background: -moz-linear-gradient(top, rgba(30, 87, 153, 1) 0%,
                rgba(125, 185, 232, 0) 100% );
            background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, rgba(30,
                87, 153, 1) ), color-stop(100%, rgba(125, 185, 232, 0) ) );
            background: -webkit-linear-gradient(top, rgba(30, 87, 153, 1) 0%,
                rgba(125, 185, 232, 0) 100% );
            background: -o-linear-gradient(top, rgba(30, 87, 153, 1) 0%,
                rgba(125, 185, 232, 0) 100% );
            background: -ms-linear-gradient(top, rgba(30, 87, 153, 1) 0%,
                rgba(125, 185, 232, 0) 100% );
            background: linear-gradient(to bottom, rgba(30, 87, 153, 1) 0%,
                rgba(125, 185, 232, 0) 100% );
            filter: progid :     DXImageTransform.Microsoft.gradient (     
                 startColorstr =  
                          '#1e5799', endColorstr =     '#007db9e8', GradientType =    
                0 );
            border-radius: 3px;
            height: 60px;
            color: white;
            padding-top: 7px;
            font-size: 15px;
        }
            
        .aptListButton {
            -moz-box-shadow: 0px 1px 0px 0px #ffffff;
            -webkit-box-shadow: 0px 1px 0px 0px #ffffff;
            box-shadow: 0px 1px 0px 0px #ffffff;
            background: -webkit-gradient(linear, left top, left bottom, color-stop(0.05, #71b2f6
                ), color-stop(1, #236fbd) );
            background: -moz-linear-gradient(center top, #71b2f6 5%, #236fbd 100%);
            filter: progid :     DXImageTransform.Microsoft.gradient (    
                startColorstr =  
                          '#71b2f6', endColorstr =     '#236fbd' );
            background-color: #71b2f6;
            -moz-border-radius: 2px;
            -webkit-border-radius: 2px;
            border-radius: 2px;
            display: inline-block;
            color: #ffffff !important;
            font-family: arial;
            font-size: 12px;
            font-weight: normal;
            padding: 5px 24px;
            text-decoration: none;
            margin-right: 5px;
        }
    </style>

    <script type="text/javascript">
		// make sure jQuery doesn't conflict with any other JS libraries
		j$ = jQuery.noConflict();
    
        // Create a namespace for our custom functions
        YAHOO.namespace("force.com");
        
        // wait panel
        
        /**
         * Builds the wait panel.
         */
        YAHOO.force.com.buildWaitPanel = function() {
            document.body.className = document.body.className + " yui-skin-sam";
            YAHOO.force.com.waitPanel = new YAHOO.widget.Panel(
                "waitPanel",  // The id of our dialog container
                { 
                        width           :   "300px", // You can play with this until it's right
                        visible         :   false,   // Should be invisible when rendered
                        draggable       :   false,   // Make the dialog draggable
                        close           :   false,   // Don't include a close title button
                        modal           :   true,    // Make it modal
                        fixedCenter     :   true,    // Keep centered if window is scrolled
                        zindex          :   40,      // Make sure it's on top of everything
                        constraintoviewport: true,
                        
                        // This line adds the appear/disapper fade effect
                        effect          :   {effect:YAHOO.widget.ContainerEffect.FADE,duration:0.25}
                                    
                }
            );
            
            // header
            YAHOO.force.com.waitPanel.setHeader("{!$Label.SubmittingApprovals2}");
            // set image
            YAHOO.force.com.waitPanel.setBody('<center><img src="{!URLFOR($Resource.Image_LoadingPage)}" /></center>');
            // Render the dialog to the document.body level of the DOM
            YAHOO.force.com.waitPanel.render(document.body);
            
        }
        
        /**
         * Callback when the submit action button is clicked
         */
        function onSubmitActionClick() {
            // show the modal panel
            YAHOO.force.com.waitPanel.show();
            // return false to allow the action to proceed
            return false;
            
        }
        
        /**
         * Callback when the submit action is completed
         */
        function onSubmitActionComplete() {
            // hide the modal panel
            YAHOO.force.com.waitPanel.hide();
            
        }
        
        // Function called when the DOM is ready to create the dialog,
        // render the dialog into the document body, add our dialog skin
        // css to the body tag, and wire up the buttons on our dialog   
        YAHOO.force.com.onDOMReady = function() {
            
            // build the wait panel
            YAHOO.force.com.buildWaitPanel();
            
        }
        
        // build the tree as soon as the DOM is in a usable state
        YAHOO.util.Event.onDOMReady(YAHOO.force.com.onDOMReady);    
        
        /**
         * Initializes the call
         */
        function initCall() {
        
            try {
                sforce.connection.sessionId = "{!$Api.Session_ID}"; //to avoid session timeout
            } catch(e) {
                ap_errorAlert(ap_cERROR_UNKNOWN,e);
            }
        
        }
        
        /**
         * Copies attachments to the list of email templates
         * @param templateIds the email template ids to copy attachments to
         * @param docIds the attachment ids to copy
         */
        function copyAttachmentsAsync(templateIds, docIds) {
            
            // show the modal panel
            YAHOO.force.com.waitPanel.show();
            // copy attachments
            // delay to display progress message    
            setTimeout(function() {
                copyAttachments(templateIds, docIds);
            }, 500);
                        
        }
        
        /**
         * Copies attachments to the list of email templates
         * @param templateIds the email template ids to copy attachments to
         * @param docIds the attachment ids to copy
         */
        function copyAttachments(templateIds, docIds) {
            
            try {
                // STEP I - initialize the call
                initCall();
                // STEP II - copy attachments
                var numTemplates = templateIds.length;
                var numDocs = docIds.length;
                
                for (var i = 0; i < numTemplates; i++) {
                    // copy each attachment
                    for (var j = 0; j < numDocs; j++) {
                        ap_copyAttachment(templateIds[i], docIds[j]);
                        
                    }
                                     
                }
                
                // STEP IV - submit
                doSubmit();
                
            } catch(ex) {
                // hide the modal panel
                //YAHOO.force.com.waitPanel.hide();;
                // display the error
                ap_erroralert(ap_cERROR_UNKNOWN, ex);
                // back to context object
                doReturn();
                
            } 
            
        }
        
        /**
         * Copies attachments to the list of email templates
         * @param templateIds the email template ids to copy attachments to
         * @param docIds the attachment ids to copy
         */
        function doSubmitAsync() {
            
            // show the modal panel
            YAHOO.force.com.waitPanel.show();
            // delay to display progress message    
            setTimeout(function() {
                doSubmitSync();
            }, 500);
                        
        }
        
        /**
         * Copies attachments to the list of email templates
         * @param templateIds the email template ids to copy attachments to
         * @param docIds the attachment ids to copy
         */
        function doSubmitSync() {
            
            try {
                // STEP I - initialize the call
                initCall();
                
                // STEP II - submit
                doSubmit();
                
            } catch(ex) {
                // hide the modal panel
                //YAHOO.force.com.waitPanel.hide();;
                // display the error
                ap_erroralert(ap_cERROR_UNKNOWN, ex);
                // back to context object
                doReturn();
                
            } 
            
        }
    </script>
    
    <apex:form >
        <apex:pageBlock id="idApprovalContextSubmitBlock">
        
            <div class="aptMainBlockHeader">
                <h2 style="margin-left: 1em;">{!pageTitle}</h2>
            </div>

            <apex:pageMessages />
            
            <apex:pageBlockButtons location="bottom" >
                <apex:outputPanel >
                    <apex:commandButton action="{!doNext}" 
                                        value="{!$Label.apttus_approval__Submit}" 
                                        onclick="onSubmitActionClick();"
                                        oncomplete="onSubmitActionComplete();"
                                        rendered="{!NOT(hasErrors) && 
                                                  (IsReSubmitStep || IsAttachmentStep || IsSubmitCommentsStep)}" 
                                        reRender="idApprovalContextSubmitBlock"
                                        styleClass="aptListButton" />

                    <apex:commandButton action="{!doNext}" 
                                        value="{!$Label.apttus_approval__Yes}" 
                                        onclick="onSubmitActionClick();"
                                        oncomplete="onSubmitActionComplete();"
                                        rendered="{!NOT(hasErrors) && IsAttachmentWarningStep && HasSubmissionComments}" 
                                        reRender="idApprovalContextSubmitBlock"
                                        styleClass="aptListButton" />
                    
                    <apex:commandButton action="{!doNext}" 
                                        value="{!$Label.apttus_approval__Yes}" 
                                        onclick="onSubmitActionClick();"
                                        oncomplete="onSubmitActionComplete();"
                                        rendered="{!NOT(hasErrors) && IsAttachmentWarningStep && NOT(HasSubmissionComments)}" 
                                        reRender="idApprovalContextSubmitBlock"
                                        styleClass="aptListButton" />
                    
                    <apex:commandButton action="{!doCancel}" 
                                        value="{!$Label.apttus_approval__No}" 
                                        rendered="{!NOT(hasErrors) && IsAttachmentWarningStep}"
                                        styleClass="aptListButton" />
                                                                                        
                    <apex:commandButton action="{!doCancel}" 
                                        value="{!$Label.apttus_approval__Cancel}" 
                                        rendered="{!NOT(hasErrors) && 
                                                    NOT(IsConfirmationStep) && 
                                                    NOT(IsAttachmentWarningStep) && 
                                                    NOT(IsPrepareStep)}"
                                        styleClass="aptListButton" />
                                                    
                    <apex:commandButton action="{!doCancel}" 
                                        value="{!$Label.apttus_approval__Return}" 
                                        rendered="{!hasErrors || IsConfirmationStep}"
                                        styleClass="aptListButton" />
                    
                    <script type="text/javascript">
                        j$('.aptListButton').removeClass('btn');
                    </script>
                </apex:outputPanel>
            </apex:pageBlockButtons>
            
            <!-- select attachments page -->
            <apex:outputPanel >
                <apex:pageBlockSection title="{!$Label.apttus_approval__SelectAttachments}" columns="1"
                                       collapsible="false" 
                                       rendered="{!IsAttachmentStep}" >
                    <apex:pageBlockTable value="{!Attachments}" var="attachInfo" >
                        <apex:column >
                            <apex:facet name="header">{!$Label.apttus_approval__Select}</apex:facet>
                            <apex:inputCheckbox selected="{!attachInfo.selected}"
                                                value="{!attachInfo.selected}" />
                        </apex:column>
                        <apex:column value="{!attachInfo.attachmentSO.Name}" />
                        <apex:column value="{!attachInfo.attachmentSO.BodyLength}" />
                        <apex:column value="{!attachInfo.attachmentSO.SystemModstamp}" />
                    </apex:pageBlockTable>
                </apex:pageBlockSection>
            </apex:outputPanel>
            
            <!-- enter submission comments page -->
            <apex:outputPanel id="idApprovalsPanel">
                <!-- approval requests preview -->
                
                <apex:outputPanel rendered="{!IsSubmitCommentsStep && showApprovals}">

                    <apex:repeat value="{!approvalStepWrappers}" var="stepWrapper">
    
                        <apex:pageBlock title="{!stepWrapper.stepSequence & ': ' & stepWrapper.stepLabel}">
    
                            <apex:repeat value="{!stepWrapper.stepRequests}" var="stepRequest">
    
                                <apex:outputPanel layout="block">
                                    <apex:pageBlockSection >
                                        <apex:repeat value="{!stepRequest.displayFields}"
                                            var="dspField">
                                            <apex:outputField value="{!stepRequest.ctxObject[dspField]}" />
                                        </apex:repeat>
                                    </apex:pageBlockSection>
                                </apex:outputPanel>
    
                                <apex:outputPanel layout="incline">
                                <table style="border:1px solid black; width:100%;"> <tr><td>
                                    <apex:pageBlockTable value="{!stepRequest.ApprovalRequests}"
                                        var="ApprovalReq" width="100%">
                                        <apex:column value="{!ApprovalReq.Apttus_Approval__StepLabel__c}" width="30%" />
                                        <apex:column value="{!ApprovalReq.Apttus_Approval__Sequence__c}" width="5%" />
                                        <apex:column value="{!ApprovalReq.Apttus_Approval__Approval_Status__c}"
                                            width="10%" />
                                        <apex:column value="{!ApprovalReq.Apttus_Approval__Assigned_To_Name__c}"
                                            width="20%" />
                                        <apex:column value="{!ApprovalReq.Apttus_Approval__Request_Comments__c}"
                                            width="35%" />
                                    </apex:pageBlockTable>
                                </td></tr></table>
                                </apex:outputPanel>
                            </apex:repeat>
                            
                            <apex:pageBlockSection id="idComment1" columns="1"
                                rendered="{!stepWrapper.comment1Enabled}">
                                <apex:outputLabel value="{!$Label[comment1Label]}"  style="font-weight:bold;"  />
                                <apex:inputTextarea value="{!stepWrapper.submitComment1Text}"  style="width:500px;"
                                        rows="3"/>
                            </apex:pageBlockSection>
                            <apex:pageBlockSection id="idComment2" columns="1"
                                rendered="{!stepWrapper.comment2Enabled}">
                                <apex:outputLabel value="{!$Label[comment2Label]}"  style="font-weight:bold;" />
                                <apex:inputTextarea value="{!stepWrapper.submitComment2Text}"  style="width:500px;"
                                        rows="3"/>
                            </apex:pageBlockSection>
                            <apex:pageBlockSection id="idComment3" columns="1"
                                rendered="{!stepWrapper.comment3Enabled}">
                                <apex:outputLabel value="{!$Label[comment3Label]}" style="font-weight:bold;" />
                                <apex:inputTextarea value="{!stepWrapper.submitComment3Text}"   style="width:500px;"
                                        rows="3"/>
                            </apex:pageBlockSection>
                                
                        </apex:pageBlock>
                    </apex:repeat>
                    
                </apex:outputPanel>

            
                <!-- process level submission comments -->
                <apex:pageBlock title="{!$Label.apttus_approval__SubmissionComments}"
                                rendered="{!IsSubmitCommentsStep && IsProcessLevelComment}">
                                
                    <apex:pageBlockSection id="idProcessLevelComment"
                                           columns="1">
                                           
                        <apex:pageBlockSectionItem >
                            {!$Label.apttus_approval__SubmissionCommentEntry}
                        </apex:pageBlockSectionItem>
        
                        <apex:pageBlockSectionItem >
                            <apex:outputLabel for="idProcessComment"
                                              value="{!$Label[submissionComments.processCommentLabel]}" />
                            <apex:outputPanel layout="block">
                                <apex:inputTextArea id="idProcessComment"
                                                    value="{!submissionComments.processComment}"
                                                    style="width:500px;height:40px" />
                            </apex:outputPanel>
                        </apex:pageBlockSectionItem>
                    </apex:pageBlockSection>
                </apex:pageBlock>
            </apex:outputPanel>
            
            <!-- prepare to submit with attachments (copies attachments to email templates) -->
            <apex:outputPanel >
                <apex:outputPanel rendered="{!IsPrepareStep && HasSelectedDocIds}" >
                    <script>
                    
                        // get the comma separated list of email template ids
                        var templateIdStr = "{!JSENCODE(EmailTemplateIdsCsv)}";
                        // get the comma separated list of selected document ids
                        var docIdStr = "{!JSENCODE(SelectedDocIdsCsv)}";
                        // show the modal panel
                        //YAHOO.force.com.waitPanel.show();
                        // copy attachments
                        // delay to display progress message    
                        setTimeout(function() {
                            copyAttachmentsAsync(templateIdStr.split(","), docIdStr.split(","));
                        }, 500);
                        
                    </script>
                </apex:outputPanel>
            </apex:outputPanel>

            <!-- prepare to submit without attachments -->
            <apex:outputPanel >
                <apex:outputPanel rendered="{!IsPrepareStep && NOT(HasSelectedDocIds)}" >
                    <script>
                    
                        // show the modal panel
                        //YAHOO.force.com.waitPanel.show();
                        // submit
                        // delay to display progress message    
                        setTimeout(function() {
                            doSubmitAsync();
                        }, 500);
                        
                    </script>
                </apex:outputPanel>
            </apex:outputPanel>
            
        </apex:pageBlock>
        
        <!--  Javascript functions -->
        <apex:actionFunction name="doSubmit" 
                             action="{!doSubmit}" 
                             oncomplete="YAHOO.force.com.waitPanel.hide();" 
                             reRender="idApprovalContextSubmitBlock" >
        </apex:actionFunction>      
        
        <apex:actionFunction name="doReturn" 
                             action="{!doCancel}" 
                             oncomplete="YAHOO.force.com.waitPanel.hide();" >
        </apex:actionFunction>      

    </apex:form>
    
</apex:page>